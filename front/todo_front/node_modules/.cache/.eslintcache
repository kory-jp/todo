[{"/usr/src/app/todo/front/todo_front/src/index.js":"1","/usr/src/app/todo/front/todo_front/src/App.js":"2","/usr/src/app/todo/front/todo_front/src/reportWebVitals.js":"3","/usr/src/app/todo/front/todo_front/src/components/lists.jsx":"4","/usr/src/app/todo/front/todo_front/src/components/AddTodo.js":"5","/usr/src/app/todo/front/todo_front/src/components/EditTodo.js":"6","/usr/src/app/todo/front/todo_front/src/components/TodoList.js":"7"},{"size":500,"mtime":1616997941280,"results":"8","hashOfConfig":"9"},{"size":3405,"mtime":1617201736453,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1616997941300,"results":"11","hashOfConfig":"9"},{"size":115,"mtime":1617100595063,"results":"12","hashOfConfig":"9"},{"size":2220,"mtime":1617241522311,"results":"13","hashOfConfig":"9"},{"size":4110,"mtime":1617255879058,"results":"14","hashOfConfig":"9"},{"size":4023,"mtime":1617201736457,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"yba7dh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/usr/src/app/todo/front/todo_front/src/index.js",[],["33","34"],"/usr/src/app/todo/front/todo_front/src/App.js",[],"/usr/src/app/todo/front/todo_front/src/reportWebVitals.js",[],"/usr/src/app/todo/front/todo_front/src/components/lists.jsx",[],["35","36"],"/usr/src/app/todo/front/todo_front/src/components/AddTodo.js",[],"/usr/src/app/todo/front/todo_front/src/components/EditTodo.js",[],"/usr/src/app/todo/front/todo_front/src/components/TodoList.js",["37","38"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from \"react-icons/im\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport EditTodo from \"./EditTodo\";\n\nconst SearchAndButtton = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SearchForm = styled.input`\n  font-size: 20px;\n  width: 100%;\n  height: 40px;\n  margin: 10px 0;\n  padding: 10px;\n`;\n\nconst RemoveAllButton = styled.button`\n  width: 16%;\n  height: 40px;\n  background: #f54242;\n  border: none;\n  font-weight: 500;\n  margin-left: 10px;\n  padding: 5px 10px;\n  border-radius: 3px;\n  color: #fff;\n  cursor: pointer;\n`;\n\nconst TodoName = styled.span`\n  font-size: 27px;\n  ${({ is_completed }) =>\n    is_completed &&\n    `\n    opacity: 0.4;\n  `}\n`;\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 7px auto;\n  padding: 10px;\n  font-size: 25px;\n`;\n\nconst CheckedBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 7px;\n  color: green;\n  cursor: pointer;\n`;\n\nconst UncheckedBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0 7px;\n  cursor: pointer;\n`;\n\nconst EditButton = styled.span`\n  display: flex;\n  align-items: center;\n  margin: 0 7px;\n`;\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [searchName, setSearchName] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3001/api/v1/lists.json\")\n      .then((resp) => {\n        console.log(resp.data);\n        setTodos(resp.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  const removeAllTodos = () => {\n    const sure = window.confirm(\"Are you sure?\");\n    if (sure) {\n      axios\n        .delete(\"http://localhost:3001/api/v1/lists/destroy_all\")\n        .then((resp) => {\n          setTodos([]);\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  };\n\n  const updateIsCompleted = (index, val) => {\n    var data = {\n      id: val.id,\n      name: val.name,\n      is_completed: !val.is_completed,\n    };\n    axios\n      .patch(`http://localhost:3001/api/v1/lists/${val.id}`, data)\n      .then((resp) => {\n        const newTodos = [...todos];\n        newTodos[index].is_completed = resp.data.is_completed;\n        setTodos(newTodos);\n      });\n  };\n\n  return (\n    <>\n      <h1>Todo List</h1>\n      <SearchAndButtton>\n        <SearchForm\n          type=\"text\"\n          placeholder=\"search todo...\"\n          onChange={(event) => {\n            setSearchName(event.target.value);\n          }}\n        />\n        <RemoveAllButton onClick={removeAllTodos}>Remove All</RemoveAllButton>\n      </SearchAndButtton>\n\n      <div>\n        {todos\n          .filter((val) => {\n            if (searchName === \"\") {\n              return val;\n            } else if (\n              val.name.toLowerCase().includes(searchName.toLowerCase())\n            ) {\n              return val;\n            }\n          })\n          .map((val, key) => {\n            return (\n              <Row key={key}>\n                {val.is_completed ? (\n                  <CheckedBox>\n                    <ImCheckboxChecked\n                      onClick={() => updateIsCompleted(key, val)}\n                    />\n                  </CheckedBox>\n                ) : (\n                  <UncheckedBox>\n                    <ImCheckboxUnchecked\n                      onClick={() => updateIsCompleted(key, val)}\n                    />\n                  </UncheckedBox>\n                )}\n                <TodoName is_completed={val.is_completed}>{val.name}</TodoName>\n                <Link to={\"/lists/\" + val.id + \"/edit\"}>\n                  <EditButton>\n                    <AiFillEdit />\n                  </EditButton>\n                </Link>\n              </Row>\n            );\n          })}\n      </div>\n    </>\n  );\n}\n\nexport default TodoList;\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"39","replacedBy":"43"},{"ruleId":"41","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":136,"column":25,"nodeType":"51","messageId":"52","endLine":136,"endColumn":27},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],["53"],["54"],"no-unused-vars","'EditTodo' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]