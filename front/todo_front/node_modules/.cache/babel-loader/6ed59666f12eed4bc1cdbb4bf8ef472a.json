{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/todo/front/todo_front/src/components/EditTodo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputName = styled.input`\n  font-size: 20px;\n  width: 100%;\n  height: 40px;\n  padding: 2px 7px;\n  margin: 12px 0;\n`;\nconst CurrentStatus = styled.div`\n  font-size: 19px;\n  margin: 8px 0 12px 0;\n  font-weight: bold;\n`;\n_c = CurrentStatus;\nconst IsCompeletedButton = styled.button`\n  color: #fff;\n  font-weight: 500;\n  font-size: 17px;\n  padding: 5px 10px;\n  background: #f2a115;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n`;\n_c2 = IsCompeletedButton;\nconst EditButton = styled.button`\n  color: white;\n  font-weight: 500;\n  font-size: 17px;\n  padding: 5px 10px;\n  margin: 0 10px;\n  background: #0ac620;\n  border-radius: 3px;\n  border: none;\n`;\n_c3 = EditButton;\nconst DeleteButton = styled.button`\n  color: #fff;\n  font-size: 17px;\n  font-weight: 500;\n  padding: 5px 10px;\n  background: #f54242;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n`;\n_c4 = DeleteButton;\ntoast.configure();\n\nfunction EditTodo(props) {\n  _s();\n\n  const initialTodostate = {\n    id: null,\n    name: \"\",\n    is_completed: false\n  };\n  const [currentTodo, setCurrentTodo] = useState(initialTodostate);\n\n  const notify = () => {\n    toast.success(\"Todo successfully updated!\", {\n      position: \"bottom-center\",\n      hideProgressBar: true\n    });\n  };\n\n  const getTodo = id => {\n    axios.get(`http://localhost:3001/api/v1/lists/${id}`).then(resp => {\n      setCurrentTodo(resp.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  useEffect(() => {\n    getTodo(props.match.params.id);\n    console.log(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCurrentTodo({ ...currentTodo,\n      [name]: value\n    });\n  };\n\n  const updateIsCompleted = val => {\n    var data = {\n      id: val.id,\n      name: val.name,\n      is_completed: !val.is_completed\n    };\n    axios.patch(`http://localhost:3001/api/v1/lists/${id}`, currentTodo).then(response => {\n      notify();\n      props.history.push(\"/lists\");\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const deleteTodo = () => {\n    const sure = window.confirm(\"Are you sure?\");\n\n    if (sure) {\n      axios.delete(`http://localhost:3001/api/v1/lists/${id}`).then(resp => {\n        console.log(resp.data);\n        props.history.push(\"/lists\");\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editing Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Current Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputForName, {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: currentTodo.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"CurrentStatus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrentStatus, {\n            children: currentTodo.is_completed ? \"Completed\" : \"UnCompleted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), currentTodo.is_completed ? /*#__PURE__*/_jsxDEV(IsCompeletedButton, {\n        className: \"badge primary mr-2\",\n        onClick: () => updateIsCompleted(currentTodo),\n        children: \"UnCompleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(IsCompeletedButton, {\n        className: \"badge badge-primary mr-2\",\n        onClick: () => updateIsCompleted(currentTodo),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditButton, {\n        type: \"submit\",\n        onClick: updateTodo,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        className: \"badge badge-danger mr-2\",\n        onClick: deleteTodo,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EditTodo, \"Eji/5X12KedIWWPb/oedFERjLmo=\");\n\n_c5 = EditTodo;\nexport default EditTodo;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CurrentStatus\");\n$RefreshReg$(_c2, \"IsCompeletedButton\");\n$RefreshReg$(_c3, \"EditButton\");\n$RefreshReg$(_c4, \"DeleteButton\");\n$RefreshReg$(_c5, \"EditTodo\");","map":{"version":3,"sources":["/usr/src/app/todo/front/todo_front/src/components/EditTodo.js"],"names":["React","useState","useEffect","axios","styled","toast","InputName","input","CurrentStatus","div","IsCompeletedButton","button","EditButton","DeleteButton","configure","EditTodo","props","initialTodostate","id","name","is_completed","currentTodo","setCurrentTodo","notify","success","position","hideProgressBar","getTodo","get","then","resp","data","catch","e","console","log","match","params","handleInputChange","event","value","target","updateIsCompleted","val","patch","response","history","push","deleteTodo","sure","window","confirm","delete","updateTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;;;AAEA,MAAMC,SAAS,GAAGF,MAAM,CAACG,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA;AACA;AACA,CAJA;KAAMD,a;AAMN,MAAME,kBAAkB,GAAGN,MAAM,CAACO,MAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,kB;AAWN,MAAME,UAAU,GAAGR,MAAM,CAACO,MAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMC,U;AAWN,MAAMC,YAAY,GAAGT,MAAM,CAACO,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAME,Y;AAWNR,KAAK,CAACS,SAAN;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAMC,gBAAgB,GAAG;AACvBC,IAAAA,EAAE,EAAE,IADmB;AAEvBC,IAAAA,IAAI,EAAE,EAFiB;AAGvBC,IAAAA,YAAY,EAAE;AAHS,GAAzB;AAMA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAACgB,gBAAD,CAA9C;;AAEA,QAAMM,MAAM,GAAG,MAAM;AACnBlB,IAAAA,KAAK,CAACmB,OAAN,CAAc,4BAAd,EAA4C;AAC1CC,MAAAA,QAAQ,EAAE,eADgC;AAE1CC,MAAAA,eAAe,EAAE;AAFyB,KAA5C;AAID,GALD;;AAOA,QAAMC,OAAO,GAAIT,EAAD,IAAQ;AACtBf,IAAAA,KAAK,CACFyB,GADH,CACQ,sCAAqCV,EAAG,EADhD,EAEGW,IAFH,CAESC,IAAD,IAAU;AACdR,MAAAA,cAAc,CAACQ,IAAI,CAACC,IAAN,CAAd;AACD,KAJH,EAKGC,KALH,CAKUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KAPH;AAQD,GATD;;AAWA/B,EAAAA,SAAS,CAAC,MAAM;AACdyB,IAAAA,OAAO,CAACX,KAAK,CAACoB,KAAN,CAAYC,MAAZ,CAAmBnB,EAApB,CAAP;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,KAAK,CAACoB,KAAN,CAAYC,MAAZ,CAAmBnB,EAA/B;AACD,GAHQ,EAGN,CAACF,KAAK,CAACoB,KAAN,CAAYC,MAAZ,CAAmBnB,EAApB,CAHM,CAAT;;AAKA,QAAMoB,iBAAiB,GAAIC,KAAD,IAAW;AACnC,UAAM;AAAEpB,MAAAA,IAAF;AAAQqB,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;AACAnB,IAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,OAACF,IAAD,GAAQqB;AAA1B,KAAD,CAAd;AACD,GAHD;;AAKA,QAAME,iBAAiB,GAAIC,GAAD,IAAS;AACjC,QAAIZ,IAAI,GAAG;AACTb,MAAAA,EAAE,EAAEyB,GAAG,CAACzB,EADC;AAETC,MAAAA,IAAI,EAAEwB,GAAG,CAACxB,IAFD;AAGTC,MAAAA,YAAY,EAAE,CAACuB,GAAG,CAACvB;AAHV,KAAX;AAKAjB,IAAAA,KAAK,CACFyC,KADH,CACU,sCAAqC1B,EAAG,EADlD,EACqDG,WADrD,EAEGQ,IAFH,CAESgB,QAAD,IAAc;AAClBtB,MAAAA,MAAM;AACNP,MAAAA,KAAK,CAAC8B,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,KALH,EAMGf,KANH,CAMUC,CAAD,IAAO;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KARH;AASD,GAfD;;AAiBA,QAAMe,UAAU,GAAG,MAAM;AACvB,UAAMC,IAAI,GAAGC,MAAM,CAACC,OAAP,CAAe,eAAf,CAAb;;AACA,QAAIF,IAAJ,EAAU;AACR9C,MAAAA,KAAK,CACFiD,MADH,CACW,sCAAqClC,EAAG,EADnD,EAEGW,IAFH,CAESC,IAAD,IAAU;AACdI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACC,IAAjB;AACAf,QAAAA,KAAK,CAAC8B,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,OALH,EAMGf,KANH,CAMUC,CAAD,IAAO;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,OARH;AASD;AACF,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,MAFL;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAEZ,WAAW,CAACF,IAJrB;AAKE,UAAA,QAAQ,EAAEmB;AALZ;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,aAAD;AAAA,sBACGjB,WAAW,CAACD,YAAZ,GAA2B,WAA3B,GAAyC;AAD5C;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAmBGC,WAAW,CAACD,YAAZ,gBACC,QAAC,kBAAD;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,OAAO,EAAE,MAAMsB,iBAAiB,CAACrB,WAAD,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAQC,QAAC,kBAAD;AACE,QAAA,SAAS,EAAC,0BADZ;AAEE,QAAA,OAAO,EAAE,MAAMqB,iBAAiB,CAACrB,WAAD,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ,eAkCE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,QAAjB;AAA0B,QAAA,OAAO,EAAEgC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlCF,eAqCE,QAAC,YAAD;AAAc,QAAA,SAAS,EAAC,yBAAxB;AAAkD,QAAA,OAAO,EAAEL,UAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA8CD;;GAnHQjC,Q;;MAAAA,Q;AAqHT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst InputName = styled.input`\n  font-size: 20px;\n  width: 100%;\n  height: 40px;\n  padding: 2px 7px;\n  margin: 12px 0;\n`;\n\nconst CurrentStatus = styled.div`\n  font-size: 19px;\n  margin: 8px 0 12px 0;\n  font-weight: bold;\n`;\n\nconst IsCompeletedButton = styled.button`\n  color: #fff;\n  font-weight: 500;\n  font-size: 17px;\n  padding: 5px 10px;\n  background: #f2a115;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n`;\n\nconst EditButton = styled.button`\n  color: white;\n  font-weight: 500;\n  font-size: 17px;\n  padding: 5px 10px;\n  margin: 0 10px;\n  background: #0ac620;\n  border-radius: 3px;\n  border: none;\n`;\n\nconst DeleteButton = styled.button`\n  color: #fff;\n  font-size: 17px;\n  font-weight: 500;\n  padding: 5px 10px;\n  background: #f54242;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n`;\n\ntoast.configure();\n\nfunction EditTodo(props) {\n  const initialTodostate = {\n    id: null,\n    name: \"\",\n    is_completed: false,\n  };\n\n  const [currentTodo, setCurrentTodo] = useState(initialTodostate);\n\n  const notify = () => {\n    toast.success(\"Todo successfully updated!\", {\n      position: \"bottom-center\",\n      hideProgressBar: true,\n    });\n  };\n\n  const getTodo = (id) => {\n    axios\n      .get(`http://localhost:3001/api/v1/lists/${id}`)\n      .then((resp) => {\n        setCurrentTodo(resp.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  useEffect(() => {\n    getTodo(props.match.params.id);\n    console.log(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setCurrentTodo({ ...currentTodo, [name]: value });\n  };\n\n  const updateIsCompleted = (val) => {\n    var data = {\n      id: val.id,\n      name: val.name,\n      is_completed: !val.is_completed,\n    };\n    axios\n      .patch(`http://localhost:3001/api/v1/lists/${id}`, currentTodo)\n      .then((response) => {\n        notify();\n        props.history.push(\"/lists\");\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const deleteTodo = () => {\n    const sure = window.confirm(\"Are you sure?\");\n    if (sure) {\n      axios\n        .delete(`http://localhost:3001/api/v1/lists/${id}`)\n        .then((resp) => {\n          console.log(resp.data);\n          props.history.push(\"/lists\");\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  };\n\n  return (\n    <>\n      <h1>Editing Todo</h1>\n      <div>\n        <div>\n          <label htmlFor=\"name\">Current Name</label>\n          <InputForName\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={currentTodo.name}\n            onChange={handleInputChange}\n          />\n          <div>\n            <span>CurrentStatus</span>\n            <br />\n            <CurrentStatus>\n              {currentTodo.is_completed ? \"Completed\" : \"UnCompleted\"}\n            </CurrentStatus>\n          </div>\n        </div>\n\n        {currentTodo.is_completed ? (\n          <IsCompeletedButton\n            className=\"badge primary mr-2\"\n            onClick={() => updateIsCompleted(currentTodo)}\n          >\n            UnCompleted\n          </IsCompeletedButton>\n        ) : (\n          <IsCompeletedButton\n            className=\"badge badge-primary mr-2\"\n            onClick={() => updateIsCompleted(currentTodo)}\n          >\n            Completed\n          </IsCompeletedButton>\n        )}\n        <EditButton type=\"submit\" onClick={updateTodo}>\n          Update\n        </EditButton>\n        <DeleteButton className=\"badge badge-danger mr-2\" onClick={deleteTodo}>\n          Delete\n        </DeleteButton>\n      </div>\n    </>\n  );\n}\n\nexport default EditTodo;\n"]},"metadata":{},"sourceType":"module"}